DEPDIR = .d
$(shell mkdir -p $(DEPDIR) >/dev/null)
DEPFLAGS = -MT $@ -MMD -MP -MF $(DEPDIR)/$*.Td

CXX = g++
include makefile.local
LIBS = -lmpfr -lgmp -lgsl -lgslcblas -lm -lglpk
CFLAGS = -I . -I $(GMP_HOME) -g -O3
LINK_FLAGS = -g -L$(GMP_LIB_HOME) -Wl,-rpath,$(GMP_LIB_HOME)
OBJS = Interval.o Matrix.o Monomial.o Polynomial.o TaylorModel.o Continuous.o Geometry.o Constraints.o Hybrid.o MyLogger.o SimpleImplApp.o ExtractedPicard.o OutputWriter.o SimpleImpl.o SimpleComp.o SmallComp.o CompApp.o MyComponent.o

TESTOBJS = Interval.o Monomial.o Polynomial.o Matrix.o MyLogger.o TaylorModel.o MyComponent.o

all: flowstar

.PHONY: test

test: 
	make testcompile
	./testcompile

testcompile: $(TESTOBJS) unittesting.o
	g++ -O3 -w $(LINK_FLAGS) -o $@ $^ $(LIBS)

  
.PHONY: fast
fast: 
	make fastcompile
	./fastcompile
  
fastcompile: $(TESTOBJS) unittestingfast.o
	g++ -O3 -w $(LINK_FLAGS) -o $@ $^ $(LIBS)

myapp: $(OBJS) lex.yy.o modelParser.tab.o modelParser.o
	g++ -O3 -w $(LINK_FLAGS) -o $@ $^ $(LIBS)

flowstar: $(OBJS) lex.yy.o modelParser.tab.o modelParser.o
	g++ -O3 -w $(LINK_FLAGS) -o $@ $^ $(LIBS)

%.o: %.cc
	$(CXX) -O3 -c $(CFLAGS) -o $@ $<
%.o: %.cpp %.h
	$(CXX) -O3 -c $(CFLAGS) -o $@ $<
  
#%.o: %.cpp $(DEPDIR)/%.d
#	$(CXX) -O3 -c $(DEPFLAGS) $(CFLAGS) -o $@ $<
#  $(POSTCOMPILE)
%.o: %.c
	$(CXX) -O3 -c $(CFLAGS) -o $@ $<

modelParser.tab.c: modelParser.y
	bison -d -v modelParser.y

lex.yy.c: modelLexer.l modelParser.tab.c
	flex modelLexer.l

clean: 
	rm -f flowstar *.o *~ modelParser.tab.c modelParser.tab.h modelParser.output lex.yy.c myapp
